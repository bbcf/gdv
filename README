##########################
### GENOME DATA VIEWER ###
##########################

GDV is a Genome browser developed at the Bioinformatics & Biostatistics Core Facility, EPFL, Lausanne, Switzerland.
It's goal is to provide biologists and bio-analysts a fast, browsable and editable view of their data along the genome. Once achieved, the user will be able to launch different statistics modules on his data and thus prepare all the mining process of the analysis.


### RUN THE PROJECT ###

REQUIREMENTS : 
	- JAVA 1.6 to run the project.
 	- TOMCAT to deploy the project (tested with version 6.0 & 7.0)
	- PostgreSQL to build the database
	- the latest WAR archive of the GDV project can be found here : http://salt.epfl.ch/java/gdv-archive/current/gdv.tgz
	- you need git installed

1) clone project : $git clone git://github.com/bbcf/gdv.git
2) $cd <GDV_HOME>
2) build tree : $sh <GDV_HOME>/build_tree.sh <absolute path to gdv> <install path>
3) install database : 	$createdb <mydb>
			$psql <mydb> <GDV_HOME>/src/main/sql/browser.sql
4) Download Tomcat : http://http://tomcat.apache.org/
5) Start it : $<TOMCAT_HOME>/bin/startup.sh
6) Download GDV : http://salt.epfl.ch/java/gdv-archive/current/gdv.tgz
7) Untar it : $tar -xvzf gdv.tgz
8) Edit configuration file under <GDV_HOME>/META-INF/gdv.yaml
9) put the directory GDV in TOMCAT webapps directory : you should be able to 
see GDV home page at this point (http://localhost:8080/gdv by default)
10) Now, you need to install two java daemons that will process your files :
	$cd GDV_HOME/conversion
	$cp -r * <install path>/.
    You should now have two more directories (transform_to_sqlite & compute_sqlite_scores) under GDV_HOME
11) Now for each one, go to the directories and run 
	$ant
12) you can now start each daemon ($sh start.sh : start them in their directories)


### INSTALL AND COMPILE ON YOUR OWN###
1) look at the dependencies

2) clone the project :
 
	$git clone git://github.com/bbcf/gdv.git

3) go to GDV_HOME

	$cd gdv

WARNING : ensure that you have ANT and MAVEN installed (see DEPENDENCIES section)

4) edit the file 'gdv.properties' and change parameters that suit your configuration

5) run the script of first installation 
	
	$./build_scripts/first_install.sh $GDV_HOME

($GDV_HOME must be the full path where gdv project is located . It's the path where you cloned the project.)

NOTE : this script is just an helper, you must ensure that every step is ok. especially the last one, to build the database.

6) make the war archive to deploy it on TOMCAT

	$./build_scripts/archive_gdv.sh $GDV_HOME

7) copy the war archive in target directory in TOMCAT webapps

8) edit your httpd conf file to work with TOMCAT and to make some directory public & accessible
from URL (the "public" & "tracks" directories)

### NOTES ###
For the script first_install.sh you need to provide an INSTALL_PATH.
This one must be on the same machine than TOMCAT. It will contains all resources needed
by GDV to be functional, and must have a large storage because each track created by GDV will be 
kept on the filesystem.


### DEPENDENCIES ###
- GDV is compiled using java 1.6 : http://www.oracle.com/technetwork/java/javase/downloads/index.html
You must use it for compiling the GDV project. If it's not your default JDK, you may want to set $JAVA_HOME to the directory where is installed the JDK 1.6 (like export JAVA_HOME=/jdk1.6.0_20/)

- GDV is build and archived using MAVEN : http://maven.apache.org/

- GDV use ANT for some dependencies : http://ant.apache.org/

- GDV can be deployed on TOMCAT : http://tomcat.apache.org/